# Application port
server.port=8070

##################################################
# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://mysql-service:3306/ekartdb  # Use the MySQL service name
spring.datasource.username=root
spring.datasource.password=root  # Use the password you set in the Docker command
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Enable H2 Console for testing purposes (optional)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

##################################################
# Spring Security Configuration
# Authentication Queries
spring.queries.users-query=select username, password, active from user where username=?
spring.queries.roles-query=select u.username, r.role from user u 
                           inner join user_role ur on (u.user_id = ur.user_id) 
                           inner join role r on (ur.role_id = r.role_id) where u.username=?

# Default Admin Credentials
spring.admin.username=admin
spring.admin.password=admin

##################################################
# Thymeleaf Configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false

##################################################
# Error Handling and Resource Configuration
# Throw exception if no handler found for a request
spring.mvc.throw-exception-if-no-handler-found=true

# Disable default static resource mappings
spring.web.resources.add-mappings=false

##################################################
# Spring Profiles
# Uncomment the following line to activate the 'production' profile
# spring.profiles.active=production
